name: NASPlayer Auto Build & Fix

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # ✅ 自动接受 Android SDK licenses（不会卡住）
      - name: Accept SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

      # ✅ 确保 gradlew 可执行
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # ✅ 尝试构建（失败时生成标志文件）
      - name: Build with Gradle
        id: build
        run: |
          ./gradlew assembleDebug --no-daemon --stacktrace --info --continue || echo "BUILD_FAILED" > build_failed.flag

      # ✅ 失败时调用 AI 自动修复
      - name: Run AI Auto Fix
        if: failure()
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "⚠️ Build failed, invoking AI auto-fix..."
          python3 scripts/fix_errors.py > ai_patch.diff
          if [ -s ai_patch.diff ]; then
            git apply ai_patch.diff || true
            git config user.name "auto-bot"
            git config user.email "bot@example.com"
            git add .
            git commit -m "fix: auto-fix build error" || echo "No changes to commit"
            git push origin HEAD:auto-fix --force
          fi

  merge:
    needs: build
    runs-on: ubuntu-latest
    if: success()   # ✅ 只有构建成功时才执行
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ✅ 全自动合并 auto-fix → main
      - name: Merge auto-fix into main
        run: |
          git config user.name "auto-bot"
          git config user.email "bot@example.com"
          git fetch origin auto-fix || echo "no auto-fix branch"
          git checkout main
          git merge origin/auto-fix --no-edit || true
          git push origin main
